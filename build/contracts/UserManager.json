{
  "contractName": "UserManager",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Users/UserManager.sol\":\"UserManager\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0x1ce06199047d2ceb26d64a81bc245d0f77a293674778502f7dc912831435d049\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5e0990114d376ae68cfeec6aeff6bc903ba85a7a7bb45a8cd64630840cf3388\",\"dweb:/ipfs/QmfKgH8m6LAZqX1L3fy65vHWtoRY3VYz8kwpQtoQnKop14\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xacac2065b3ed1facff1163435890d4a6bcdc474e857e8e2c91ae5fb50418f723\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acd44ec097dd623f40870ca848c31deb02dca032ec9c56bd2e52ee103d35ce6d\",\"dweb:/ipfs/Qme3CuA45xCft72RjE6s4bmhffpe2NHvHULH9fh5oPbzBv\"]},\"project:/contracts/Apps/App.sol\":{\"keccak256\":\"0x9e2e8d88a7a17f5b9b2d2add7cb0d00ea704ab4ec558737a905d3b7241677316\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6d44c9d10dd8890b903b2fc8d0649a0773aa03948b32dbd4a854feff6e130c6d\",\"dweb:/ipfs/QmejTAQsQ3NGZbPDiBrM34Ns1yfbh8GAahQEXfJX7ymoZm\"]},\"project:/contracts/Users/User.sol\":{\"keccak256\":\"0x7c49ba216463cc5de8d096fad2ad64e3dc48cb3b97164b5d8eca8daa4c14f62b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a8d6808cb00331e0e74204f9b52b673f822baaabbf4d4ad14c2d9081a9c054bd\",\"dweb:/ipfs/QmcUKNVmusLcZvTtCvKutdmgWFcbneC5hmdnko4PGBRHcm\"]},\"project:/contracts/Users/UserManager.sol\":{\"keccak256\":\"0x99323b576b22098314beeabf5725509126f4f247f6d2198039802eeaf0b51d6c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1fcd05a8d3be3320b5273b80a9dc8b3ae39a4b7c1f255e256211cfdba28be880\",\"dweb:/ipfs/QmSFyFuQJbnz1YSJYT3waTWh7DAsSa2BkiqtfLJgPs6kVE\"]},\"project:/contracts/Utils/AddressUtils.sol\":{\"keccak256\":\"0x2d4173df8330b63dfd24d66892e18938abb98f3fdc3d4fc088f36ac1dc258382\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://cfc276597430b1b1e0e9398dcf8e36c695cff392218fe6e4e6f77e3e3ee88cd9\",\"dweb:/ipfs/QmQ6WhHpmdoMDvVdcnx9Pj4pzbYPFcqWFVcjGpm4CzfkHN\"]},\"project:/contracts/Utils/AppInfoLibrary.sol\":{\"keccak256\":\"0xfc2e61ae2fe7826ec216ddea0eb429560ae22bf4e8edbab601d70dd9f9197862\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://04ab1e4505aca8cdca6f8c4543e91e52a3899eaf1a3250daa7305958d90d94be\",\"dweb:/ipfs/QmTbTzDBRSEm457t8cNFZSHVBQiuj4bBzwWL8emf3cRkLP\"]},\"project:/contracts/Utils/Constants.sol\":{\"keccak256\":\"0x08dcdf44c804ad5e267e81446ebd325135eadef7ab094963ff97d5875ec964b2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://54f7da49dcd36f1d237e646242d8e1e82be76d30f2e26ecbd5ceb3ced1ab14a1\",\"dweb:/ipfs/QmexV1XUNFvdBmcCiyqF5hvrrr5mMRxnpfBHVcCrJFYQBL\"]},\"project:/contracts/Utils/StringUtils.sol\":{\"keccak256\":\"0x8b55ed70a88faccc252ae34b83ab8a3bac925eb5ac815285603d8245cb1d5ce1\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://832b48f5074f8f52d8888ff2e4f512cc653b6dc3c844d8533cbe3529e10a5d0c\",\"dweb:/ipfs/QmWkqpAg7AP4xfnV6NESBLSuqWWgf64sKxzmWiSXahUkcn\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610033610025640100000000610038810204565b64010000000061003c810204565b61008c565b3390565b60008054600160a060020a03838116600160a060020a0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61034a8061009b6000396000f3fe608060405234801561001057600080fd5b506004361061005d577c01000000000000000000000000000000000000000000000000000000006000350463715018a681146100625780638da5cb5b1461006c578063f2fde38b14610098575b600080fd5b61006a6100ab565b005b6000546040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61006a6100a63660046102d7565b61013d565b60005473ffffffffffffffffffffffffffffffffffffffff163314610131576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61013b600061026d565b565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610128565b73ffffffffffffffffffffffffffffffffffffffff8116610261576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610128565b61026a8161026d565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff83811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102e957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461030d57600080fd5b939250505056fea264697066735822122080ea796a550d3824dffa9ae81ea0d2ed9eb52a6c75d56b13ad311e108470212a64736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061005d577c01000000000000000000000000000000000000000000000000000000006000350463715018a681146100625780638da5cb5b1461006c578063f2fde38b14610098575b600080fd5b61006a6100ab565b005b6000546040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61006a6100a63660046102d7565b61013d565b60005473ffffffffffffffffffffffffffffffffffffffff163314610131576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61013b600061026d565b565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610128565b73ffffffffffffffffffffffffffffffffffffffff8116610261576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610128565b61026a8161026d565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff83811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102e957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461030d57600080fd5b939250505056fea264697066735822122080ea796a550d3824dffa9ae81ea0d2ed9eb52a6c75d56b13ad311e108470212a64736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1324:19",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:19",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:125:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "190:42:19",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:55:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:74:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:74:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:19",
                "type": ""
              }
            ],
            "src": "14:226:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "315:239:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "361:16:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "370:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "373:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "363:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "363:12:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "363:12:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "336:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "345:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "332:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "332:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "357:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "328:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "328:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "325:52:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "386:36:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "412:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "399:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "399:23:19"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "390:5:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "508:16:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "517:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "520:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "510:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "510:12:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "510:12:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "444:5:19"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "455:5:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "462:42:19",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "451:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "451:54:19"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "441:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "441:65:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "434:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "434:73:19"
                  },
                  "nodeType": "YulIf",
                  "src": "431:93:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "533:15:19",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "543:5:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "533:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "281:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "292:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "304:6:19",
                "type": ""
              }
            ],
            "src": "245:309:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "733:182:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "750:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "761:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "743:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "743:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "743:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "784:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "795:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "780:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "780:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "800:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "773:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "773:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "773:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "823:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "834:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "819:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "819:18:19"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "839:34:19",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "812:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "812:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "812:62:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "883:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "895:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "906:2:19",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "891:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "891:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "883:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "710:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "724:4:19",
                "type": ""
              }
            ],
            "src": "559:356:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1094:228:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1111:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1122:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1104:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1104:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1104:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1145:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1156:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1141:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1141:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1161:2:19",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1134:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1134:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1134:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1184:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1195:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1180:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1180:18:19"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1200:34:19",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1173:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1173:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1173:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1255:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1266:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1251:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1251:18:19"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1271:8:19",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1244:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1244:36:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1244:36:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1289:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1301:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1312:3:19",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1297:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1297:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1289:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1071:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1085:4:19",
                "type": ""
              }
            ],
            "src": "920:402:19"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 19,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "563:37:13:-:0;;;;;;;;;;;;-1:-1:-1;921:32:0;940:12;:10;;;;:12;:::i;:::-;921:18;;;;:32;:::i;:::-;563:37:13;;640:96:2;719:10;;640:96::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;563:37:13:-;;;;;;;",
  "deployedSourceMap": "563:37:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1668:101:0;;;:::i;:::-;;1036:85;1082:7;1108:6;1036:85;;;1108:6;;;;160:74:19;;1036:85:0;;;;;148:2:19;1036:85:0;;;1918:198;;;;;;:::i;:::-;;:::i;1668:101::-;1082:7;1108:6;1248:23;1108:6;719:10:2;1248:23:0;1240:68;;;;;;;761:2:19;1240:68:0;;;743:21:19;;;780:18;;;773:30;839:34;819:18;;;812:62;891:18;;1240:68:0;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1918:198::-;1082:7;1108:6;1248:23;1108:6;719:10:2;1248:23:0;1240:68;;;;;;;761:2:19;1240:68:0;;;743:21:19;;;780:18;;;773:30;839:34;819:18;;;812:62;891:18;;1240:68:0;559:356:19;1240:68:0;2006:22:::1;::::0;::::1;1998:73;;;::::0;::::1;::::0;;1122:2:19;1998:73:0::1;::::0;::::1;1104:21:19::0;1161:2;1141:18;;;1134:30;1200:34;1180:18;;;1173:62;1271:8;1251:18;;;1244:36;1297:19;;1998:73:0::1;920:402:19::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;;2378:17;;;-1:-1:-1;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;245:309:19:-;304:6;357:2;345:9;336:7;332:23;328:32;325:52;;;373:1;370;363:12;325:52;412:9;399:23;462:42;455:5;451:54;444:5;441:65;431:93;;520:1;517;510:12;431:93;543:5;245:309;-1:-1:-1;;;245:309:19:o",
  "source": "//SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.15;\r\n\r\nimport {App} from '../Apps/App.sol';\r\nimport {User} from './User.sol';\r\nimport {Constants} from '../Utils/Constants.sol';\r\nimport {StringUtils} from '../Utils/StringUtils.sol';\r\nimport {AddressUtils, AddressPayableUtils} from '../Utils/AddressUtils.sol';\r\nimport {AppInfoLibrary} from '../Utils/AppInfoLibrary.sol';\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\nimport \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\";\r\n\r\ncontract UserManager is Ownable{\r\n\r\n}",
  "sourcePath": "C:\\Users\\User\\Documents\\GitHub\\SmartContracts\\contracts\\Users\\UserManager.sol",
  "ast": {
    "absolutePath": "project:/contracts/Users/UserManager.sol",
    "exportedSymbols": {
      "AddressPayableUtils": [
        4312
      ],
      "AddressUtils": [
        4279
      ],
      "App": [
        2928
      ],
      "AppInfoLibrary": [
        4351
      ],
      "Constants": [
        4369
      ],
      "Context": [
        421
      ],
      "Counters": [
        495
      ],
      "EnumerableMap": [
        1739
      ],
      "EnumerableSet": [
        2338
      ],
      "Ownable": [
        104
      ],
      "StringUtils": [
        4510
      ],
      "User": [
        4226
      ],
      "UserManager": [
        4247
      ]
    },
    "id": 4248,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4228,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:24:13"
      },
      {
        "absolutePath": "project:/contracts/Apps/App.sol",
        "file": "../Apps/App.sol",
        "id": 4230,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4248,
        "sourceUnit": 2929,
        "src": "67:36:13",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4229,
              "name": "App",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2928,
              "src": "75:3:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Users/User.sol",
        "file": "./User.sol",
        "id": 4232,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4248,
        "sourceUnit": 4227,
        "src": "105:32:13",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4231,
              "name": "User",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4226,
              "src": "113:4:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Utils/Constants.sol",
        "file": "../Utils/Constants.sol",
        "id": 4234,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4248,
        "sourceUnit": 4370,
        "src": "139:49:13",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4233,
              "name": "Constants",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4369,
              "src": "147:9:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Utils/StringUtils.sol",
        "file": "../Utils/StringUtils.sol",
        "id": 4236,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4248,
        "sourceUnit": 4511,
        "src": "190:53:13",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4235,
              "name": "StringUtils",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4510,
              "src": "198:11:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Utils/AddressUtils.sol",
        "file": "../Utils/AddressUtils.sol",
        "id": 4239,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4248,
        "sourceUnit": 4313,
        "src": "245:76:13",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4237,
              "name": "AddressUtils",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4279,
              "src": "253:12:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 4238,
              "name": "AddressPayableUtils",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4312,
              "src": "267:19:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Utils/AppInfoLibrary.sol",
        "file": "../Utils/AppInfoLibrary.sol",
        "id": 4241,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4248,
        "sourceUnit": 4352,
        "src": "323:59:13",
        "symbolAliases": [
          {
            "foreign": {
              "id": 4240,
              "name": "AppInfoLibrary",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4351,
              "src": "331:14:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4242,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4248,
        "sourceUnit": 105,
        "src": "386:52:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 4243,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4248,
        "sourceUnit": 496,
        "src": "440:52:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol",
        "file": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol",
        "id": 4244,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4248,
        "sourceUnit": 1740,
        "src": "494:65:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4245,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "587:7:13"
            },
            "id": 4246,
            "nodeType": "InheritanceSpecifier",
            "src": "587:7:13"
          }
        ],
        "canonicalName": "UserManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4247,
        "linearizedBaseContracts": [
          4247,
          104,
          421
        ],
        "name": "UserManager",
        "nameLocation": "572:11:13",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 4248,
        "src": "563:37:13",
        "usedErrors": []
      }
    ],
    "src": "39:561:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-07-08T14:46:50.207Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}